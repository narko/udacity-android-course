{"version":3,"sources":["src/database/api/TransactionResult.ts","database/api/TransactionResult.js"],"names":["TransactionResult","committed","snapshot"],"mappings":";;;;;AAAA;;;;;;;;;;;;;;;AAkBA,IAAAA,oBAAA,YAAA;AACE;;;;;;;AAOA,aAAAA,iBAAA,CAAmBC,SAAnB,EAA8CC,QAA9C,EAAoE;AAAjD,aAAAD,SAAA,GAAAA,SAAA;AAA2B,aAAAC,QAAA,GAAAA,QAAA;AAE7C;AACH,WAAAF,iBAAA;AAXA,CAAA,EAAA;QCWSA,iB,GAAAA,iB","file":"TransactionResult.js","sourcesContent":["/**\n* Copyright 2017 Google Inc.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\nimport { DataSnapshot } from './DataSnapshot';\n\nexport class TransactionResult {\n  /**\n   * A type for the resolve value of Firebase.transaction.\n   * @constructor\n   * @dict\n   * @param {boolean} committed\n   * @param {DataSnapshot} snapshot\n   */\n  constructor(public committed: boolean, public snapshot: DataSnapshot) {\n\n  }\n}","/**\n* Copyright 2017 Google Inc.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\nvar TransactionResult = (function () {\n    /**\n     * A type for the resolve value of Firebase.transaction.\n     * @constructor\n     * @dict\n     * @param {boolean} committed\n     * @param {DataSnapshot} snapshot\n     */\n    function TransactionResult(committed, snapshot) {\n        this.committed = committed;\n        this.snapshot = snapshot;\n    }\n    return TransactionResult;\n}());\nexport { TransactionResult };\n\n\n"]}
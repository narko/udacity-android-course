{"version":3,"sources":["database/src/database/core/util/validation.ts"],"names":["INVALID_KEY_REGEX_","INVALID_PATH_REGEX_","MAX_LEAF_SIZE_","isValidKey","key","length","test","isValidPathString","pathString","isValidRootPathString","replace","isValidPriority","priority","validateFirebaseDataArg","fnName","argumentNumber","data","path","optional","undefined","validateFirebaseData","errorPrefix","path_","Error","toErrorString","toString","substring","hasDotValue_1","hasActualChild_1","value","push","pop","validateFirebaseMergePaths","mergePaths","i","curPath","keys","slice","j","sort","comparePaths","prevPath","contains","validateFirebaseMergeDataArg","Array","isArray","child","getBack","validatePriority","validateEventType","eventType","validateKey","validatePathString","validateRootPathString","validateWritablePath","getFront","validateUrl","parsedUrl","repoInfo","host","namespace","validateCredential","cred","validateBoolean","bool","validateString","string","validateObject","obj","validateObjectContainsKey","opt_type","objectContainsKey","val"],"mappings":"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","file":"validation.js","sourcesContent":["/**\n* Copyright 2017 Google Inc.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\nimport { Path, ValidationPath } from './Path';\nimport { forEach, contains, safeGet } from '../../../utils/obj';\nimport { isInvalidJSONNumber } from './util';\nimport { errorPrefix as errorPrefixFxn } from '../../../utils/validation';\nimport { stringLength } from '../../../utils/utf8';\nimport { RepoInfo } from '../RepoInfo';\n\n/**\n * True for invalid Firebase keys\n * @type {RegExp}\n * @private\n */\nexport const INVALID_KEY_REGEX_ = /[\\[\\].#$\\/\\u0000-\\u001F\\u007F]/;\n\n/**\n * True for invalid Firebase paths.\n * Allows '/' in paths.\n * @type {RegExp}\n * @private\n */\nexport const INVALID_PATH_REGEX_ = /[\\[\\].#$\\u0000-\\u001F\\u007F]/;\n\n/**\n * Maximum number of characters to allow in leaf value\n * @type {number}\n * @private\n */\nexport const MAX_LEAF_SIZE_ = 10 * 1024 * 1024;\n\n\n/**\n * @param {*} key\n * @return {boolean}\n */\nexport const isValidKey = function (key: any): boolean {\n  return typeof key === 'string' && key.length !== 0 &&\n    !INVALID_KEY_REGEX_.test(key);\n};\n\n/**\n * @param {string} pathString\n * @return {boolean}\n */\nexport const isValidPathString = function (pathString: string): boolean {\n  return typeof pathString === 'string' && pathString.length !== 0 &&\n    !INVALID_PATH_REGEX_.test(pathString);\n};\n\n/**\n * @param {string} pathString\n * @return {boolean}\n */\nexport const isValidRootPathString = function (pathString: string): boolean {\n  if (pathString) {\n    // Allow '/.info/' at the beginning.\n    pathString = pathString.replace(/^\\/*\\.info(\\/|$)/, '/');\n  }\n\n  return isValidPathString(pathString);\n};\n\n/**\n * @param {*} priority\n * @return {boolean}\n */\nexport const isValidPriority = function (priority: any): boolean {\n  return priority === null ||\n    typeof priority === 'string' ||\n    (typeof priority === 'number' && !isInvalidJSONNumber(priority)) ||\n    ((priority && typeof priority === 'object') && contains(priority, '.sv'));\n};\n\n/**\n * Pre-validate a datum passed as an argument to Firebase function.\n *\n * @param {string} fnName\n * @param {number} argumentNumber\n * @param {*} data\n * @param {!Path} path\n * @param {boolean} optional\n */\nexport const validateFirebaseDataArg = function (fnName: string, argumentNumber: number,\n                                                 data: any, path: Path, optional: boolean) {\n  if (optional && data === undefined)\n    return;\n\n  validateFirebaseData(\n    errorPrefixFxn(fnName, argumentNumber, optional),\n    data, path\n  );\n};\n\n/**\n * Validate a data object client-side before sending to server.\n *\n * @param {string} errorPrefix\n * @param {*} data\n * @param {!Path|!ValidationPath} path_\n */\nexport const validateFirebaseData = function (errorPrefix: string, data: any, path_: Path | ValidationPath) {\n  const path = path_ instanceof Path\n    ? new ValidationPath(path_, errorPrefix)\n    : path_;\n\n  if (data === undefined) {\n    throw new Error(errorPrefix + 'contains undefined ' + path.toErrorString());\n  }\n  if (typeof data === 'function') {\n    throw new Error(errorPrefix + 'contains a function ' + path.toErrorString() +\n      ' with contents = ' + data.toString());\n  }\n  if (isInvalidJSONNumber(data)) {\n    throw new Error(errorPrefix + 'contains ' + data.toString() + ' ' + path.toErrorString());\n  }\n\n  // Check max leaf size, but try to avoid the utf8 conversion if we can.\n  if (typeof data === 'string' &&\n    data.length > MAX_LEAF_SIZE_ / 3 &&\n    stringLength(data) > MAX_LEAF_SIZE_) {\n    throw new Error(errorPrefix + 'contains a string greater than ' +\n      MAX_LEAF_SIZE_ +\n      ' utf8 bytes ' + path.toErrorString() +\n      ' (\\'' + data.substring(0, 50) + '...\\')');\n  }\n\n  // TODO = Perf = Consider combining the recursive validation of keys into NodeFromJSON\n  // to save extra walking of large objects.\n  if ((data && typeof data === 'object')) {\n    let hasDotValue = false, hasActualChild = false;\n    forEach(data, function (key: string, value: any) {\n      if (key === '.value') {\n        hasDotValue = true;\n      }\n      else if (key !== '.priority' && key !== '.sv') {\n        hasActualChild = true;\n        if (!isValidKey(key)) {\n          throw new Error(errorPrefix + ' contains an invalid key (' + key + ') ' +\n            path.toErrorString() +\n            '.  Keys must be non-empty strings ' +\n            'and can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\"');\n        }\n      }\n\n      path.push(key);\n      validateFirebaseData(errorPrefix, value, path);\n      path.pop();\n    });\n\n    if (hasDotValue && hasActualChild) {\n      throw new Error(errorPrefix + ' contains \".value\" child ' +\n        path.toErrorString() +\n        ' in addition to actual children.');\n    }\n  }\n};\n\n/**\n * Pre-validate paths passed in the firebase function.\n *\n * @param {string} errorPrefix\n * @param {Array<!Path>} mergePaths\n */\nexport const validateFirebaseMergePaths = function (errorPrefix: string, mergePaths: Path[]) {\n  let i, curPath;\n  for (i = 0; i < mergePaths.length; i++) {\n    curPath = mergePaths[i];\n    const keys = curPath.slice();\n    for (let j = 0; j < keys.length; j++) {\n      if (keys[j] === '.priority' && j === (keys.length - 1)) {\n        // .priority is OK\n      } else if (!isValidKey(keys[j])) {\n        throw new Error(errorPrefix + 'contains an invalid key (' + keys[j] + ') in path ' +\n          curPath.toString() +\n          '. Keys must be non-empty strings ' +\n          'and can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\"');\n      }\n    }\n  }\n\n  // Check that update keys are not descendants of each other.\n  // We rely on the property that sorting guarantees that ancestors come\n  // right before descendants.\n  mergePaths.sort(Path.comparePaths);\n  let prevPath: Path | null = null;\n  for (i = 0; i < mergePaths.length; i++) {\n    curPath = mergePaths[i];\n    if (prevPath !== null && prevPath.contains(curPath)) {\n      throw new Error(errorPrefix + 'contains a path ' + prevPath.toString() +\n        ' that is ancestor of another path ' + curPath.toString());\n    }\n    prevPath = curPath;\n  }\n};\n\n/**\n * pre-validate an object passed as an argument to firebase function (\n * must be an object - e.g. for firebase.update()).\n *\n * @param {string} fnName\n * @param {number} argumentNumber\n * @param {*} data\n * @param {!Path} path\n * @param {boolean} optional\n */\nexport const validateFirebaseMergeDataArg = function (fnName: string, argumentNumber: number,\n                                                      data: any, path: Path, optional: boolean) {\n  if (optional && data === undefined)\n    return;\n\n  const errorPrefix = errorPrefixFxn(fnName, argumentNumber, optional);\n\n  if (!(data && typeof data === 'object') || Array.isArray(data)) {\n    throw new Error(errorPrefix + ' must be an object containing the children to replace.');\n  }\n\n  const mergePaths: Path[] = [];\n  forEach(data, function (key: string, value: any) {\n    const curPath = new Path(key);\n    validateFirebaseData(errorPrefix, value, path.child(curPath));\n    if (curPath.getBack() === '.priority') {\n      if (!isValidPriority(value)) {\n        throw new Error(\n          errorPrefix + 'contains an invalid value for \\'' + curPath.toString() + '\\', which must be a valid ' +\n          'Firebase priority (a string, finite number, server value, or null).');\n      }\n    }\n    mergePaths.push(curPath);\n  });\n  validateFirebaseMergePaths(errorPrefix, mergePaths);\n};\n\nexport const validatePriority = function (fnName: string, argumentNumber: number, priority: any, optional: boolean) {\n  if (optional && priority === undefined)\n    return;\n  if (isInvalidJSONNumber(priority))\n    throw new Error(\n      errorPrefixFxn(fnName, argumentNumber, optional) +\n      'is ' + priority.toString() +\n      ', but must be a valid Firebase priority (a string, finite number, ' +\n      'server value, or null).');\n  // Special case to allow importing data with a .sv.\n  if (!isValidPriority(priority))\n    throw new Error(\n      errorPrefixFxn(fnName, argumentNumber, optional) +\n      'must be a valid Firebase priority ' +\n      '(a string, finite number, server value, or null).');\n};\n\nexport const validateEventType = function (fnName: string, argumentNumber: number,\n                                           eventType: string, optional: boolean) {\n  if (optional && eventType === undefined)\n    return;\n\n  switch (eventType) {\n    case 'value':\n    case 'child_added':\n    case 'child_removed':\n    case 'child_changed':\n    case 'child_moved':\n      break;\n    default:\n      throw new Error(\n        errorPrefixFxn(fnName, argumentNumber, optional) +\n        'must be a valid event type = \"value\", \"child_added\", \"child_removed\", ' +\n        '\"child_changed\", or \"child_moved\".');\n  }\n};\n\nexport const validateKey = function (fnName: string, argumentNumber: number,\n                                     key: string, optional: boolean) {\n  if (optional && key === undefined)\n    return;\n  if (!isValidKey(key))\n    throw new Error(errorPrefixFxn(fnName, argumentNumber, optional) +\n      'was an invalid key = \"' + key +\n      '\".  Firebase keys must be non-empty strings and ' +\n      'can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\").');\n};\n\nexport const validatePathString = function (fnName: string, argumentNumber: number,\n                                            pathString: string, optional: boolean) {\n  if (optional && pathString === undefined)\n    return;\n\n  if (!isValidPathString(pathString))\n    throw new Error(errorPrefixFxn(fnName, argumentNumber, optional) +\n      'was an invalid path = \"' +\n      pathString +\n      '\". Paths must be non-empty strings and ' +\n      'can\\'t contain \".\", \"#\", \"$\", \"[\", or \"]\"');\n};\n\nexport const validateRootPathString = function (fnName: string, argumentNumber: number,\n                                                pathString: string, optional: boolean) {\n  if (pathString) {\n    // Allow '/.info/' at the beginning.\n    pathString = pathString.replace(/^\\/*\\.info(\\/|$)/, '/');\n  }\n\n  validatePathString(fnName, argumentNumber, pathString, optional);\n};\n\nexport const validateWritablePath = function (fnName: string, path: Path) {\n  if (path.getFront() === '.info') {\n    throw new Error(fnName + ' failed = Can\\'t modify data under /.info/');\n  }\n};\n\nexport const validateUrl = function (fnName: string, argumentNumber: number,\n                                     parsedUrl: { repoInfo: RepoInfo, path: Path }) {\n  // TODO = Validate server better.\n  const pathString = parsedUrl.path.toString();\n  if (!(typeof parsedUrl.repoInfo.host === 'string') || parsedUrl.repoInfo.host.length === 0 ||\n    !isValidKey(parsedUrl.repoInfo.namespace) ||\n    (pathString.length !== 0 && !isValidRootPathString(pathString))) {\n    throw new Error(errorPrefixFxn(fnName, argumentNumber, false) +\n      'must be a valid firebase URL and ' +\n      'the path can\\'t contain \".\", \"#\", \"$\", \"[\", or \"]\".');\n  }\n};\n\nexport const validateCredential = function (fnName: string, argumentNumber: number, cred: any, optional: boolean) {\n  if (optional && cred === undefined)\n    return;\n  if (!(typeof cred === 'string'))\n    throw new Error(\n      errorPrefixFxn(fnName, argumentNumber, optional) +\n      'must be a valid credential (a string).');\n};\n\nexport const validateBoolean = function (fnName: string, argumentNumber: number, bool: any, optional: boolean) {\n  if (optional && bool === undefined)\n    return;\n  if (typeof bool !== 'boolean')\n    throw new Error(errorPrefixFxn(fnName, argumentNumber, optional) +\n      'must be a boolean.');\n};\n\nexport const validateString = function (fnName: string, argumentNumber: number, string: any, optional: boolean) {\n  if (optional && string === undefined)\n    return;\n  if (!(typeof string === 'string')) {\n    throw new Error(\n      errorPrefixFxn(fnName, argumentNumber, optional) +\n      'must be a valid string.');\n  }\n};\n\nexport const validateObject = function (fnName: string, argumentNumber: number, obj: any, optional: boolean) {\n  if (optional && obj === undefined)\n    return;\n  if (!(obj && typeof obj === 'object') || obj === null) {\n    throw new Error(\n      errorPrefixFxn(fnName, argumentNumber, optional) +\n      'must be a valid object.');\n  }\n};\n\nexport const validateObjectContainsKey = function (fnName: string, argumentNumber: number, obj: any, key: string, optional: boolean, opt_type?: string) {\n  const objectContainsKey = ((obj && typeof obj === 'object') && contains(obj, key));\n\n  if (!objectContainsKey) {\n    if (optional) {\n      return;\n    } else {\n      throw new Error(\n        errorPrefixFxn(fnName, argumentNumber, optional) +\n        'must contain the key \"' + key + '\"');\n    }\n  }\n\n  if (opt_type) {\n    const val = safeGet(obj, key);\n    if ((opt_type === 'number' && !(typeof val === 'number')) ||\n      (opt_type === 'string' && !(typeof val === 'string')) ||\n      (opt_type === 'boolean' && !(typeof val === 'boolean')) ||\n      (opt_type === 'function' && !(typeof val === 'function')) ||\n      (opt_type === 'object' && !(typeof val === 'object') && val)) {\n      if (optional) {\n        throw new Error(errorPrefixFxn(fnName, argumentNumber, optional) +\n          'contains invalid value for key \"' + key + '\" (must be of type \"' + opt_type + '\")');\n      } else {\n        throw new Error(errorPrefixFxn(fnName, argumentNumber, optional) +\n          'must contain the key \"' + key + '\" with type \"' + opt_type + '\"');\n      }\n    }\n  }\n};\n"]}